from telegram.ext import CommandHandler, MessageHandler, Filters
from settings import TELEGRAM_SUPPORT_CHAT_ID


def start(update, context):
    update.message.reply_text('–ü—Ä–∏–≤–µ—Ç, –∑–∞–¥–∞–π –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å)')

    user_info = update.message.from_user.to_dict()

    context.bot.send_message(
        chat_id=TELEGRAM_SUPPORT_CHAT_ID,
        text=f"""
üìû –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å -  {user_info}.
        """,
    )


def forward_to_chat(update, context):
    forwarded = update.message.forward(chat_id=TELEGRAM_SUPPORT_CHAT_ID)
    # print(forwarded.forward_from)
    # print()
    # print(forwarded)
    # print()
    # print(update)
    try:
        context.bot.send_message(
            chat_id=TELEGRAM_SUPPORT_CHAT_ID,
            reply_to_message_id=forwarded.message_id,
            text=f'–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç @{update.message.chat.username} ID:{update.message.from_user.id}\n'
                 f'{"–û—Ç–≤–µ—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (Reply)"}'
        )
    except Exception as err:
        print(err)


def forward_to_user(update, context):
    user_id = None
    try:
        if update.message is not None:
            user_id = int(update.message.reply_to_message.text.split('ID:')[1].split('\n')[0])
        else:
            user_id = int(update.channel_post.reply_to_message.text.split('ID:')[1].split('\n')[0])
    except AttributeError:
        user_id = None
    if user_id:
        if update.message is not None:
            context.bot.copy_message(
                message_id=update.message.message_id,
                chat_id=user_id,
                from_chat_id=update.message.chat.id
            )
        else:
            context.bot.copy_message(
                message_id=update.channel_post.message_id,
                chat_id=user_id,
                from_chat_id=update.channel_post.chat.id
            )
    else:
        context.bot.send_message(
            chat_id=TELEGRAM_SUPPORT_CHAT_ID,
            text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.'
        )


def setup_dispatcher(dp):
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(MessageHandler(Filters.chat_type.private, forward_to_chat))
    dp.add_handler(MessageHandler(Filters.chat(TELEGRAM_SUPPORT_CHAT_ID) & Filters.reply, forward_to_user))
    return dp
